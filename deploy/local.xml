<?xml version="1.0" encoding="UTF-8"?>

<project name="axr" default="none">
	<target name="init" depends="load-properties, setup-dirs" unless="project.initialized">
		<!-- Set property to prevent target from being executed multiple times -->
		<property name="project.initialized" value="true"/>
		<tstamp/>
	</target>

	<target name="setup-dirs" depends="load-properties">
		<if>
			<isset property="drupal.make.dir"/>
			<then>
				<property name="project.drupal.dir" value="${project.basedir}/${drupal.make.dir}" />
			</then>
			<else>
				<property name="project.drupal.dir" value="${project.basedir}" />
			</else>
		</if>

		<property name="project.sitesdir" value="${project.drupal.dir}/${project.code.dir}" />
		<property name="project.builddir" value="${project.basedir}/build" />
		<property name="project.toolsdir" value="${project.builddir}/tools" />
		<property name="project.dbdir" value="${project.builddir}/db" />
		<property name="project.dbscriptsdir" value="${project.basedir}/db/scripts" />
		<property name="project.deltasdir" value="${project.basedir}/db/deltas" />

		<mkdir dir="${project.dbdir}" />
	</target>

	<target name="load-properties">
		<php function="dirname" returnProperty="phing.dir">
			<param value="${phing.file}"/>
		</php>

		<property name="project.basedir" value="${phing.dir}" />

		<!-- Use condition instead of unless property as we cannot unset properties in Phing -->
		<if>
			<or>
				<!-- `istrue` evaluates to true is value is not set we need to check `isset` as well -->
				<not>
					<istrue value="${project.properties.loaded}" />
				</not>
				<not>
					<isset property="project.properties.loaded" />
				</not>
			</or>
			<then>
				<if>
					<!-- If `local.properties` exists then assume we have a project root directory -->
					<available file="${project.basedir}/../local.properties"/>
					<then>
						<resolvepath propertyName="project.basedir" file="${project.basedir}/../"/>
					</then>
				</if>

				<!-- By default use default properties file `local.default.properties` -->
				<property name="project.properties.file" value="${phing.dir}/local.default.properties" />
				<!-- Load the default properties.Override in case `load-properties` are called multiple times. -->
				<property file="${project.properties.file}" override="true" />

				<!-- Allow override using `local.properties` in build file directory -->
				<available file="${phing.dir}/local.properties" property="project.properties.file" value="${phing.dir}/local.properties" />
				<!-- Allow override using `local.properties` in project base directory -->
				<available file="${project.basedir}/local.properties" property="project.properties.file" value="${project.basedir}/local.properties" />

				<!-- Load the overriding properties. -->
				<property file="${project.properties.file}" override="true" />

				<!-- Set property to prevent unnecessary additional invocations of this target -->
				<property name="project.properties.loaded" value="true" />
			</then>
		</if>
	</target>

	<target name="setup-phing-drush" depends="setup-dirs" >
		<property name="repo.dir" value="${project.toolsdir}/phing-drush"/>
		<property name="repo.url" value="${phing.drush.repository.url}" />
		<property name="repo.revision" value="${phing.drush.repository.revision}" />

		<!-- Register as custom Phing task -->
		<taskdef name="drush" classname="DrushTask" classpath="${project.toolsdir}/phing-drush" />

		<!-- Run drush from the project Drupal directory -->
		<property name="drush.root" value="${project.drupal.dir}"/>
	</target>

	<target name="site-install" depends="init, setup-phing-drush" unless="project.installed">
		<drush command="site-install" assume="yes">
			<option name="db-url">mysql://${drupal.db.username}:${drupal.db.password}@${drupal.db.host}/${drupal.db.database}</option>
			<option name="db-prefix">${drupal.db.tablesprefix}</option>
			<option name="account-name">${drupal.account.name}</option>
			<option name="account-pass">${drupal.account.pass}</option>
			<option name="account-mail">${drupal.account.mail}</option>
			<option name="site-name">${drupal.site.name}</option>
			<option name="site-mail">${drupal.site.mail}</option>
			<param>${drupal.profile}</param>
		</drush>

		<exec
			command="mysql -h${drupal.db.host} -u${drupal.db.username} -p${drupal.db.password} ${drupal.db.database} &lt; ${project.dbscriptsdir}/initial.sql"
			checkreturn="true" />
		<phingcall target="dbdeploy" />

		<!-- enable template-->
		<drush command="pm-enable" assume="yes">
			<param>${drupal.theme.name}</param>
		</drush>

		<drush command="vset" assume="yes">
			<param>theme_default</param>
			<param>${drupal.theme.name}</param>
		</drush>

		<!-- Fix permissions for the default site directory and settings. The owner must be able to delete the directories during subsequent builds. -->
		<chmod file="${project.drupal.dir}/sites/default/" mode="0755" failonerror="true"/>

		<!-- Set property to prevent target from being executed multiple times -->
		<property name="project.installed" value="true"/>
	</target>

	<target name="dbdeploy" depends="init">
		<property name="db.deployfile" value="${DSTAMP}${TSTAMP}-deploy.sql" />
		<property name="db.undofile" value="${DSTAMP}${TSTAMP}-undo.sql" />

		<dbdeploy
			url="mysql:host=${drupal.db.host};dbname=${drupal.db.database}"
			userid="${drupal.db.username}"
			password="${drupal.db.password}"
			dir="${project.deltasdir}"
			outputfile="${project.dbscriptsdir}/${db.deployfile}"
			undooutputfile="${project.dbscriptsdir}/${db.undofile}" />

		<exec
			command="mysql -h${drupal.db.host} -u${drupal.db.username} -p${drupal.db.password} ${drupal.db.database} &lt; ${project.dbscriptsdir}/${db.deployfile}"
			checkreturn="true" />
	</target>

	<target name="none">
	</target>
</project>

