<?php

/**
 * Setup custom urls
 */
function ajaxutil_menu () {
	$items['_ajax/search'] = array(
		'page callback' => 'ajaxutil_handle_search',
		'access arguments' => array('search content'),
	);

	$items['_ajax/template'] = array(
		'page callback' => 'ajaxutil_handle_template',
		'access arguments' => array('access content'),
	);

	$items['_ajax/info'] = array(
		'page callback' => 'ajaxutil_handle_info',
		'access arguments' => array('access content'),
	);

	return $items;
}

/**
 * Handle requests to /search/json
 */
function ajaxutil_handle_search () {
	$response = array(
		'status' => 0, // 0 = good | 1 = bad
		'error' => null,
		'error_msg' => null,
		'payload' => null
	);

	try {
		if (!isset($_GET['keys']) ||
			!isset($_GET['type'])) {
			$response['error'] = 'invalid_request';
			throw new Exception();
		}

		// There will be more types
		if (!in_array($_GET['type'], array('mixed', 'node', 'user', 'wiki'))) {
			$response['error'] = 'invalid_type';
			throw new Exception();
		}

		if ($_GET['type'] == 'mixed')
		{
			$response['payload'] = axrsearch_get_combined($_GET['keys']);
		}
		else if ($_GET['type'] == 'wiki')
		{
			$response['payload'] = axrsearch_get_mw($_GET['keys']);
		}
		else
		{
			$response['payload'] = axrsearch_get_drupal($_GET['keys'], $_GET['type']);
		}
	} catch (Exception $e) {
		$response['status'] = 1;
	}

	echo json_encode($response);
}

/**
 * Handle requests to /_ajax/template
 * Returns a template file
 */
function ajaxutil_handle_template () {
	$response = array(
		'status' => 0, // 0 = good | 1 = bad
		'error' => null,
		'error_msg' => null,
		'payload' => null
	);

	try {
		if (!isset($_GET['name'])) {
			$response['error'] = 'invalid_request';
			throw new Exception();
		}

		$name = preg_replace('/[^a-zA-z0-9-_]/', '', $_GET['name']);
		$file = path_to_theme().'/ajaxtemplates/'.$name.'.tpl';

		if (!file_exists($file)) {
			$response['error'] = 'template_not_found';
			throw new Exception();
		}

		$response['payload'] = array(
			'name' => $name,
			'template' => file_get_contents($file)
		);
	} catch (Exception $e) {
		$response['status'] = 1;
	}

	echo json_encode($response);
}

/**
 * Handle requests to /_ajax/info
 */
function ajaxutil_handle_info () {
	global $theme_key;

	$response = array(
		'status' => 0,
		'error' => null,
		'error_msg' => null,
		'payload' => null
	);

	try {
		if (!isset($_GET['url'])) {
			$response['error'] = 'invalid_request';
			throw new Exception();
		}

		$url = preg_replace('/(^\/|\/$)/', '', $_GET['url']);

		// Get node
		$source = drupal_lookup_path('source', $url);
		$nid = preg_replace('/^\/node\/([0-9]+)$/', '$1', $source);
		$node = ($source === $nid) ? null : node_load($nid);

		$assets = assetmagic_find($url, array(
			'nodeType' => $node->type,
			'theme' => $theme_key
		));

		$css = array();
		$js = array();

		foreach ($assets as $asset)
		{
			if ($asset['type'] === 'css')
			{
				$css[] = '/'. $asset['path'];
			}
			else if ($asset['type'] === 'js')
			{
				$js[] = '/' . $asset['path'];
			}
		}

		$response['payload'] = array(
			'url' => $url,
			'js' => $js,
			'css' => $css
		);
	} catch (Exception $e) {
	}

	echo json_encode($response);
}

